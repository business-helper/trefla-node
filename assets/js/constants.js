const SKT_CHECK_HEALTH = "CHECK_HEALTH";
// when user A enter chatroom 'AB', A emits to server. B receives emission from server with same event name.
const SKT_CONNECT_TO_USER = 'socket.connect.to.user';
const SKT_CONNECT_TO_CARD = 'socket.connect.to.card';
const SKT_CONNECT_REQUESTED = 'socket.connect.requested';
const SKT_CONNECT_ACCEPT = 'socket.connect.accept';
const SKT_CONNECT_ACCEPTED = 'socket.connect.accepted';
const SKT_CONNECT_REJECT = 'socket.connect.reject';
const SKT_CONNECT_REJECTED = 'socket.connect.rejected';
const SKT_USER_ENTER_ROOM = 'socket.user.enter.room';
const SKT_USER_TYPING = 'socket.user.typing';
const SKT_ACCEPT_CONNECTION = 'socket.accepted.connection'; // ?
const SKT_SELECT_CHAT = 'socket.select.chat';
const SKT_LEAVE_CHAT = 'socket.select.chat';
const SKT_SEND_MSG = 'socket.send.message';
const SKT_RECEIVE_MSG = 'socket.receive.message';
const SKT_UPDATE_ONLINE = 'socket.update.online';
const SKT_NOTI_NUM_UPDATED = 'socket.noti.num.updated';
const SKT_UNREAD_MSG_UPDATED = 'socket.unread.msg.updated';
const SKT_CREATE_NOTIFICATION = 'socket.create.new.notification';
const SKT_CHAT_DELETED = 'socket.chat.deleted';
const SKT_REGISTER_WITH_CARD = 'socket.register.with.card';
const SKT_CARD_VERIFIED = 'socket.card.verified';
